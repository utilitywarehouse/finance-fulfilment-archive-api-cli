// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/utilitywarehouse/finance-fulfilment-archive-api/pkg/pb/bfaa (interfaces: BillFulfilmentArchiveAPIClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	bfaa "github.com/utilitywarehouse/finance-fulfilment-archive-api/pkg/pb/bfaa"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockBillFulfilmentArchiveAPIClient is a mock of BillFulfilmentArchiveAPIClient interface.
type MockBillFulfilmentArchiveAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockBillFulfilmentArchiveAPIClientMockRecorder
}

// MockBillFulfilmentArchiveAPIClientMockRecorder is the mock recorder for MockBillFulfilmentArchiveAPIClient.
type MockBillFulfilmentArchiveAPIClientMockRecorder struct {
	mock *MockBillFulfilmentArchiveAPIClient
}

// NewMockBillFulfilmentArchiveAPIClient creates a new mock instance.
func NewMockBillFulfilmentArchiveAPIClient(ctrl *gomock.Controller) *MockBillFulfilmentArchiveAPIClient {
	mock := &MockBillFulfilmentArchiveAPIClient{ctrl: ctrl}
	mock.recorder = &MockBillFulfilmentArchiveAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBillFulfilmentArchiveAPIClient) EXPECT() *MockBillFulfilmentArchiveAPIClientMockRecorder {
	return m.recorder
}

// DeleteBillFulfilmentArchive mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) DeleteBillFulfilmentArchive(arg0 context.Context, arg1 *bfaa.DeleteBillFulfilmentArchiveRequest, arg2 ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteBillFulfilmentArchive", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteBillFulfilmentArchive indicates an expected call of DeleteBillFulfilmentArchive.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) DeleteBillFulfilmentArchive(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBillFulfilmentArchive", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).DeleteBillFulfilmentArchive), varargs...)
}

// DeleteBillFulfilmentArchiveByAccountNumber mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) DeleteBillFulfilmentArchiveByAccountNumber(arg0 context.Context, arg1 *bfaa.DeleteBillFulfilmentArchiveByAccountNumberRequest, arg2 ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteBillFulfilmentArchiveByAccountNumber", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteBillFulfilmentArchiveByAccountNumber indicates an expected call of DeleteBillFulfilmentArchiveByAccountNumber.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) DeleteBillFulfilmentArchiveByAccountNumber(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBillFulfilmentArchiveByAccountNumber", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).DeleteBillFulfilmentArchiveByAccountNumber), varargs...)
}

// DeleteBillFulfilmentArchiveByRequestID mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) DeleteBillFulfilmentArchiveByRequestID(arg0 context.Context, arg1 *bfaa.DeleteBillFulfilmentArchiveByRequestIDRequest, arg2 ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteBillFulfilmentArchiveByRequestID", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteBillFulfilmentArchiveByRequestID indicates an expected call of DeleteBillFulfilmentArchiveByRequestID.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) DeleteBillFulfilmentArchiveByRequestID(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBillFulfilmentArchiveByRequestID", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).DeleteBillFulfilmentArchiveByRequestID), varargs...)
}

// GetBillFulfilmentArchive mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) GetBillFulfilmentArchive(arg0 context.Context, arg1 *bfaa.GetBillFulfilmentArchiveRequest, arg2 ...grpc.CallOption) (*bfaa.GetBillFulfilmentArchiveResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetBillFulfilmentArchive", varargs...)
	ret0, _ := ret[0].(*bfaa.GetBillFulfilmentArchiveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBillFulfilmentArchive indicates an expected call of GetBillFulfilmentArchive.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) GetBillFulfilmentArchive(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBillFulfilmentArchive", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).GetBillFulfilmentArchive), varargs...)
}

// GetBillFulfilmentArchiveByAccountNumber mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) GetBillFulfilmentArchiveByAccountNumber(arg0 context.Context, arg1 *bfaa.GetBillFulfilmentArchiveByAccountNumberRequest, arg2 ...grpc.CallOption) (*bfaa.GetBillFulfilmentArchiveResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetBillFulfilmentArchiveByAccountNumber", varargs...)
	ret0, _ := ret[0].(*bfaa.GetBillFulfilmentArchiveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBillFulfilmentArchiveByAccountNumber indicates an expected call of GetBillFulfilmentArchiveByAccountNumber.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) GetBillFulfilmentArchiveByAccountNumber(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBillFulfilmentArchiveByAccountNumber", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).GetBillFulfilmentArchiveByAccountNumber), varargs...)
}

// GetBillFulfilmentArchiveByRequestID mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) GetBillFulfilmentArchiveByRequestID(arg0 context.Context, arg1 *bfaa.GetBillFulfilmentArchiveByRequestIDRequest, arg2 ...grpc.CallOption) (*bfaa.GetBillFulfilmentArchiveResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetBillFulfilmentArchiveByRequestID", varargs...)
	ret0, _ := ret[0].(*bfaa.GetBillFulfilmentArchiveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBillFulfilmentArchiveByRequestID indicates an expected call of GetBillFulfilmentArchiveByRequestID.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) GetBillFulfilmentArchiveByRequestID(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBillFulfilmentArchiveByRequestID", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).GetBillFulfilmentArchiveByRequestID), varargs...)
}

// SaveBillFulfilmentArchive mocks base method.
func (m *MockBillFulfilmentArchiveAPIClient) SaveBillFulfilmentArchive(arg0 context.Context, arg1 *bfaa.SaveBillFulfilmentArchiveRequest, arg2 ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SaveBillFulfilmentArchive", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveBillFulfilmentArchive indicates an expected call of SaveBillFulfilmentArchive.
func (mr *MockBillFulfilmentArchiveAPIClientMockRecorder) SaveBillFulfilmentArchive(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveBillFulfilmentArchive", reflect.TypeOf((*MockBillFulfilmentArchiveAPIClient)(nil).SaveBillFulfilmentArchive), varargs...)
}
