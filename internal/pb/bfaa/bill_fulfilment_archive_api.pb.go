// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bill_fulfilment_archive_api.proto

package bfaa

import (
	bytes "bytes"
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	fulfilment "github.com/utilitywarehouse/finance-fulfilment-archive-api-cli/internal/pb/fulfilment"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RequestTag int32

const (
	REQUEST_TAG_NONE         RequestTag = 0
	REQUEST_TAG_ITEMISED     RequestTag = 1
	REQUEST_TAG_NON_ITEMISED RequestTag = 2
	REQUEST_TAG_CSV_STANDING RequestTag = 3
	REQUEST_TAG_CSV_CALLS    RequestTag = 4
)

var RequestTag_name = map[int32]string{
	0: "REQUEST_TAG_NONE",
	1: "REQUEST_TAG_ITEMISED",
	2: "REQUEST_TAG_NON_ITEMISED",
	3: "REQUEST_TAG_CSV_STANDING",
	4: "REQUEST_TAG_CSV_CALLS",
}

var RequestTag_value = map[string]int32{
	"REQUEST_TAG_NONE":         0,
	"REQUEST_TAG_ITEMISED":     1,
	"REQUEST_TAG_NON_ITEMISED": 2,
	"REQUEST_TAG_CSV_STANDING": 3,
	"REQUEST_TAG_CSV_CALLS":    4,
}

func (RequestTag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{0}
}

type BillFulfilmentArchive struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *BillFulfilmentArchive) Reset()      { *m = BillFulfilmentArchive{} }
func (*BillFulfilmentArchive) ProtoMessage() {}
func (*BillFulfilmentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{0}
}
func (m *BillFulfilmentArchive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BillFulfilmentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BillFulfilmentArchive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BillFulfilmentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BillFulfilmentArchive.Merge(m, src)
}
func (m *BillFulfilmentArchive) XXX_Size() int {
	return m.Size()
}
func (m *BillFulfilmentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_BillFulfilmentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_BillFulfilmentArchive proto.InternalMessageInfo

func (m *BillFulfilmentArchive) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetBillFulfilmentArchiveRequest struct {
	Id  string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag fulfilment.Tag `protobuf:"varint,2,opt,name=tag,proto3,enum=fulfilment.Tag" json:"tag,omitempty"`
}

func (m *GetBillFulfilmentArchiveRequest) Reset()      { *m = GetBillFulfilmentArchiveRequest{} }
func (*GetBillFulfilmentArchiveRequest) ProtoMessage() {}
func (*GetBillFulfilmentArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{1}
}
func (m *GetBillFulfilmentArchiveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBillFulfilmentArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBillFulfilmentArchiveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBillFulfilmentArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBillFulfilmentArchiveRequest.Merge(m, src)
}
func (m *GetBillFulfilmentArchiveRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBillFulfilmentArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBillFulfilmentArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBillFulfilmentArchiveRequest proto.InternalMessageInfo

func (m *GetBillFulfilmentArchiveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetBillFulfilmentArchiveRequest) GetTag() fulfilment.Tag {
	if m != nil {
		return m.Tag
	}
	return fulfilment.BILL_FULFILMENT_REQUEST_TAG_UNDEFINED
}

type GetBillFulfilmentArchiveByRequestIDRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *GetBillFulfilmentArchiveByRequestIDRequest) Reset() {
	*m = GetBillFulfilmentArchiveByRequestIDRequest{}
}
func (*GetBillFulfilmentArchiveByRequestIDRequest) ProtoMessage() {}
func (*GetBillFulfilmentArchiveByRequestIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{2}
}
func (m *GetBillFulfilmentArchiveByRequestIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBillFulfilmentArchiveByRequestIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBillFulfilmentArchiveByRequestIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBillFulfilmentArchiveByRequestIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBillFulfilmentArchiveByRequestIDRequest.Merge(m, src)
}
func (m *GetBillFulfilmentArchiveByRequestIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBillFulfilmentArchiveByRequestIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBillFulfilmentArchiveByRequestIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBillFulfilmentArchiveByRequestIDRequest proto.InternalMessageInfo

func (m *GetBillFulfilmentArchiveByRequestIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SaveBillFulfilmentArchiveRequest struct {
	Id      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Archive *BillFulfilmentArchive `protobuf:"bytes,2,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (m *SaveBillFulfilmentArchiveRequest) Reset()      { *m = SaveBillFulfilmentArchiveRequest{} }
func (*SaveBillFulfilmentArchiveRequest) ProtoMessage() {}
func (*SaveBillFulfilmentArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{3}
}
func (m *SaveBillFulfilmentArchiveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveBillFulfilmentArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveBillFulfilmentArchiveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveBillFulfilmentArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveBillFulfilmentArchiveRequest.Merge(m, src)
}
func (m *SaveBillFulfilmentArchiveRequest) XXX_Size() int {
	return m.Size()
}
func (m *SaveBillFulfilmentArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveBillFulfilmentArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveBillFulfilmentArchiveRequest proto.InternalMessageInfo

func (m *SaveBillFulfilmentArchiveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SaveBillFulfilmentArchiveRequest) GetArchive() *BillFulfilmentArchive {
	if m != nil {
		return m.Archive
	}
	return nil
}

type GetBillFulfilmentArchiveByAccountNumberRequest struct {
	AccountId    string     `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Year         string     `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	Month        string     `protobuf:"bytes,3,opt,name=month,proto3" json:"month,omitempty"`
	Tag          RequestTag `protobuf:"varint,4,opt,name=tag,proto3,enum=RequestTag" json:"tag,omitempty"`
	LegacyLookup bool       `protobuf:"varint,5,opt,name=legacy_lookup,json=legacyLookup,proto3" json:"legacy_lookup,omitempty"`
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) Reset() {
	*m = GetBillFulfilmentArchiveByAccountNumberRequest{}
}
func (*GetBillFulfilmentArchiveByAccountNumberRequest) ProtoMessage() {}
func (*GetBillFulfilmentArchiveByAccountNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{4}
}
func (m *GetBillFulfilmentArchiveByAccountNumberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBillFulfilmentArchiveByAccountNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBillFulfilmentArchiveByAccountNumberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBillFulfilmentArchiveByAccountNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBillFulfilmentArchiveByAccountNumberRequest.Merge(m, src)
}
func (m *GetBillFulfilmentArchiveByAccountNumberRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBillFulfilmentArchiveByAccountNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBillFulfilmentArchiveByAccountNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBillFulfilmentArchiveByAccountNumberRequest proto.InternalMessageInfo

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) GetTag() RequestTag {
	if m != nil {
		return m.Tag
	}
	return REQUEST_TAG_NONE
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) GetLegacyLookup() bool {
	if m != nil {
		return m.LegacyLookup
	}
	return false
}

type GetBillFulfilmentArchiveResponse struct {
	Archive *BillFulfilmentArchive `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (m *GetBillFulfilmentArchiveResponse) Reset()      { *m = GetBillFulfilmentArchiveResponse{} }
func (*GetBillFulfilmentArchiveResponse) ProtoMessage() {}
func (*GetBillFulfilmentArchiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_03178e81e975bd4c, []int{5}
}
func (m *GetBillFulfilmentArchiveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBillFulfilmentArchiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBillFulfilmentArchiveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBillFulfilmentArchiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBillFulfilmentArchiveResponse.Merge(m, src)
}
func (m *GetBillFulfilmentArchiveResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetBillFulfilmentArchiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBillFulfilmentArchiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBillFulfilmentArchiveResponse proto.InternalMessageInfo

func (m *GetBillFulfilmentArchiveResponse) GetArchive() *BillFulfilmentArchive {
	if m != nil {
		return m.Archive
	}
	return nil
}

func init() {
	proto.RegisterEnum("RequestTag", RequestTag_name, RequestTag_value)
	proto.RegisterType((*BillFulfilmentArchive)(nil), "BillFulfilmentArchive")
	proto.RegisterType((*GetBillFulfilmentArchiveRequest)(nil), "GetBillFulfilmentArchiveRequest")
	proto.RegisterType((*GetBillFulfilmentArchiveByRequestIDRequest)(nil), "GetBillFulfilmentArchiveByRequestIDRequest")
	proto.RegisterType((*SaveBillFulfilmentArchiveRequest)(nil), "SaveBillFulfilmentArchiveRequest")
	proto.RegisterType((*GetBillFulfilmentArchiveByAccountNumberRequest)(nil), "GetBillFulfilmentArchiveByAccountNumberRequest")
	proto.RegisterType((*GetBillFulfilmentArchiveResponse)(nil), "GetBillFulfilmentArchiveResponse")
}

func init() { proto.RegisterFile("bill_fulfilment_archive_api.proto", fileDescriptor_03178e81e975bd4c) }

var fileDescriptor_03178e81e975bd4c = []byte{
	// 665 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x41, 0x4f, 0x13, 0x41,
	0x14, 0xde, 0x69, 0x8b, 0xca, 0x03, 0xb1, 0x99, 0x00, 0x59, 0x10, 0xd6, 0x76, 0x39, 0x88, 0x90,
	0xee, 0x1a, 0xbc, 0x19, 0x2f, 0x05, 0x2a, 0x69, 0xc4, 0xaa, 0xed, 0x6a, 0x8c, 0x97, 0xcd, 0x74,
	0x3b, 0xdd, 0x4e, 0xdc, 0xee, 0xd4, 0x76, 0x16, 0xd2, 0x10, 0x12, 0xe3, 0x2f, 0x30, 0xe1, 0x4f,
	0xf0, 0x27, 0xbc, 0x7b, 0x24, 0xf1, 0xc2, 0x51, 0x16, 0x0f, 0x1e, 0xb9, 0x7b, 0x31, 0x9d, 0xdd,
	0xd2, 0x86, 0xd0, 0x50, 0x6e, 0x33, 0xdf, 0xf7, 0xf6, 0xbd, 0x6f, 0xbe, 0x7d, 0xef, 0x41, 0xb6,
	0xca, 0x3c, 0xcf, 0xae, 0x07, 0x5e, 0x9d, 0x79, 0x4d, 0xea, 0x0b, 0x9b, 0xb4, 0x9d, 0x06, 0xdb,
	0xa3, 0x36, 0x69, 0x31, 0xa3, 0xd5, 0xe6, 0x82, 0x2f, 0xe6, 0x5c, 0x26, 0x1a, 0x41, 0xd5, 0x70,
	0x78, 0xd3, 0x74, 0xb9, 0xcb, 0x4d, 0x09, 0x57, 0x83, 0xba, 0xbc, 0xc9, 0x8b, 0x3c, 0xc5, 0xe1,
	0xaf, 0x86, 0xc2, 0x03, 0xc1, 0x3c, 0x26, 0xba, 0xfb, 0xa4, 0x4d, 0x1b, 0x3c, 0xe8, 0x50, 0xb3,
	0xce, 0x7c, 0xe2, 0x3b, 0x34, 0xc7, 0xfc, 0x3d, 0xce, 0x1c, 0x9a, 0xeb, 0xa7, 0xca, 0x35, 0x79,
	0x8d, 0x7a, 0xe6, 0x40, 0x47, 0x9c, 0x6c, 0xc9, 0xe5, 0xdc, 0xf5, 0xa8, 0x49, 0x5a, 0xcc, 0x24,
	0xbe, 0xcf, 0x05, 0x11, 0x8c, 0xfb, 0x9d, 0x98, 0x7d, 0x18, 0xb3, 0x97, 0x82, 0x68, 0xb3, 0x25,
	0xba, 0x11, 0xa9, 0xaf, 0xc3, 0xdc, 0x26, 0xf3, 0xbc, 0x97, 0x97, 0x29, 0xf3, 0xd1, 0xcb, 0x30,
	0x86, 0x54, 0x8d, 0x08, 0xa2, 0xa2, 0x0c, 0x5a, 0x9d, 0x2e, 0xcb, 0xb3, 0x6e, 0xc1, 0xa3, 0x1d,
	0x2a, 0xae, 0x8d, 0x2f, 0xd3, 0x2f, 0x01, 0xed, 0x08, 0x3c, 0x03, 0x09, 0x56, 0x93, 0x1f, 0x4d,
	0x96, 0x13, 0xac, 0x86, 0xb3, 0x90, 0x14, 0xc4, 0x55, 0x13, 0x19, 0xb4, 0x3a, 0xb3, 0xf1, 0xc0,
	0x18, 0x92, 0x6e, 0x11, 0xb7, 0xdc, 0xe3, 0xf4, 0x17, 0xb0, 0x36, 0x2a, 0xeb, 0x66, 0x37, 0xce,
	0x5b, 0xdc, 0x1e, 0x51, 0x40, 0xaf, 0x41, 0xa6, 0x42, 0xf6, 0xe8, 0xad, 0x44, 0x3d, 0x85, 0xbb,
	0xf1, 0x0f, 0x94, 0xc2, 0xa6, 0x36, 0xe6, 0x8d, 0xeb, 0xbf, 0xef, 0x87, 0xe9, 0x3f, 0x10, 0x18,
	0xa3, 0x45, 0xe6, 0x1d, 0x87, 0x07, 0xbe, 0x28, 0x05, 0xcd, 0x2a, 0x6d, 0xf7, 0x8b, 0x2e, 0x03,
	0x90, 0x08, 0xb7, 0x2f, 0x8b, 0x4f, 0xc6, 0x48, 0xb1, 0xd6, 0xf3, 0xb7, 0x4b, 0x49, 0x5b, 0x0a,
	0x98, 0x2c, 0xcb, 0x33, 0x9e, 0x85, 0x89, 0x26, 0xf7, 0x45, 0x43, 0x4d, 0x4a, 0x30, 0xba, 0xe0,
	0xe5, 0xc8, 0xc2, 0x94, 0xb4, 0x70, 0xca, 0x88, 0xf3, 0xf7, 0xed, 0xc3, 0x2b, 0x70, 0xdf, 0xa3,
	0x2e, 0x71, 0xba, 0xb6, 0xc7, 0xf9, 0xe7, 0xa0, 0xa5, 0x4e, 0x64, 0xd0, 0xea, 0xbd, 0xf2, 0x74,
	0x04, 0xee, 0x4a, 0x4c, 0xb7, 0x20, 0x33, 0xfa, 0xcf, 0x75, 0x5a, 0xdc, 0xef, 0xd0, 0x61, 0x57,
	0xd0, 0x58, 0xae, 0xac, 0x1d, 0x21, 0x80, 0x81, 0x1c, 0x3c, 0x0b, 0xe9, 0x72, 0xe1, 0xdd, 0xfb,
	0x42, 0xc5, 0xb2, 0xad, 0xfc, 0x8e, 0x5d, 0x7a, 0x53, 0x2a, 0xa4, 0x15, 0xac, 0xc2, 0xec, 0x30,
	0x5a, 0xb4, 0x0a, 0xaf, 0x8b, 0x95, 0xc2, 0x76, 0x1a, 0xe1, 0x25, 0x50, 0xaf, 0xc4, 0x0f, 0xd8,
	0xc4, 0x55, 0x76, 0xab, 0xf2, 0xc1, 0xae, 0x58, 0xf9, 0xd2, 0x76, 0xb1, 0xb4, 0x93, 0x4e, 0xe2,
	0x05, 0x98, 0xbb, 0xca, 0x6e, 0xe5, 0x77, 0x77, 0x2b, 0xe9, 0xd4, 0xc6, 0xbf, 0x24, 0xa8, 0xd7,
	0x0a, 0xcf, 0xbf, 0x2d, 0x62, 0x02, 0xea, 0x28, 0x23, 0x70, 0xc6, 0xb8, 0xa1, 0xbb, 0x17, 0xb3,
	0xc6, 0x4d, 0x2e, 0xea, 0x0a, 0xde, 0x87, 0x95, 0x31, 0xfa, 0x19, 0xaf, 0x1b, 0xe3, 0x77, 0xfd,
	0x78, 0x85, 0x3f, 0xc2, 0xc2, 0xc8, 0x51, 0xc0, 0x59, 0xe3, 0xa6, 0x31, 0x59, 0x9c, 0x37, 0xa2,
	0x4d, 0x61, 0xf4, 0x37, 0x85, 0x51, 0xe8, 0x6d, 0x0a, 0x5d, 0xc1, 0xc7, 0x08, 0x1e, 0x8f, 0xd9,
	0xfe, 0xd8, 0xbc, 0xe5, 0xa0, 0x8c, 0xf3, 0xb6, 0x27, 0xdf, 0x7e, 0xfd, 0x39, 0x4a, 0xac, 0xe0,
	0xac, 0xd9, 0x5b, 0xc4, 0xe6, 0xc1, 0x60, 0xb0, 0x0e, 0xcd, 0x83, 0xde, 0xe8, 0x1c, 0x9a, 0x07,
	0x72, 0x58, 0x0e, 0x37, 0x9f, 0x9f, 0x9c, 0x69, 0xca, 0xe9, 0x99, 0xa6, 0x5c, 0x9c, 0x69, 0xe8,
	0x6b, 0xa8, 0xa1, 0xe3, 0x50, 0x43, 0x3f, 0x43, 0x0d, 0x9d, 0x84, 0x1a, 0xfa, 0x1d, 0x6a, 0xe8,
	0x6f, 0xa8, 0x29, 0x17, 0xa1, 0x86, 0xbe, 0x9f, 0x6b, 0xca, 0xc9, 0xb9, 0xa6, 0x9c, 0x9e, 0x6b,
	0xca, 0xa7, 0x54, 0xb5, 0x4e, 0x48, 0xf5, 0x8e, 0x7c, 0xf8, 0xb3, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x33, 0x01, 0x9d, 0x05, 0xef, 0x05, 0x00, 0x00,
}

func (x RequestTag) String() string {
	s, ok := RequestTag_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *BillFulfilmentArchive) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BillFulfilmentArchive)
	if !ok {
		that2, ok := that.(BillFulfilmentArchive)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.Data, that1.Data) {
		return false
	}
	return true
}
func (this *GetBillFulfilmentArchiveRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBillFulfilmentArchiveRequest)
	if !ok {
		that2, ok := that.(GetBillFulfilmentArchiveRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Tag != that1.Tag {
		return false
	}
	return true
}
func (this *GetBillFulfilmentArchiveByRequestIDRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBillFulfilmentArchiveByRequestIDRequest)
	if !ok {
		that2, ok := that.(GetBillFulfilmentArchiveByRequestIDRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	return true
}
func (this *SaveBillFulfilmentArchiveRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SaveBillFulfilmentArchiveRequest)
	if !ok {
		that2, ok := that.(SaveBillFulfilmentArchiveRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if !this.Archive.Equal(that1.Archive) {
		return false
	}
	return true
}
func (this *GetBillFulfilmentArchiveByAccountNumberRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBillFulfilmentArchiveByAccountNumberRequest)
	if !ok {
		that2, ok := that.(GetBillFulfilmentArchiveByAccountNumberRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if this.Year != that1.Year {
		return false
	}
	if this.Month != that1.Month {
		return false
	}
	if this.Tag != that1.Tag {
		return false
	}
	if this.LegacyLookup != that1.LegacyLookup {
		return false
	}
	return true
}
func (this *GetBillFulfilmentArchiveResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBillFulfilmentArchiveResponse)
	if !ok {
		that2, ok := that.(GetBillFulfilmentArchiveResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Archive.Equal(that1.Archive) {
		return false
	}
	return true
}
func (this *BillFulfilmentArchive) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&bfaa.BillFulfilmentArchive{")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBillFulfilmentArchiveRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&bfaa.GetBillFulfilmentArchiveRequest{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBillFulfilmentArchiveByRequestIDRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&bfaa.GetBillFulfilmentArchiveByRequestIDRequest{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SaveBillFulfilmentArchiveRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&bfaa.SaveBillFulfilmentArchiveRequest{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Archive != nil {
		s = append(s, "Archive: "+fmt.Sprintf("%#v", this.Archive)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBillFulfilmentArchiveByAccountNumberRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&bfaa.GetBillFulfilmentArchiveByAccountNumberRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "Year: "+fmt.Sprintf("%#v", this.Year)+",\n")
	s = append(s, "Month: "+fmt.Sprintf("%#v", this.Month)+",\n")
	s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	s = append(s, "LegacyLookup: "+fmt.Sprintf("%#v", this.LegacyLookup)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBillFulfilmentArchiveResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&bfaa.GetBillFulfilmentArchiveResponse{")
	if this.Archive != nil {
		s = append(s, "Archive: "+fmt.Sprintf("%#v", this.Archive)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringBillFulfilmentArchiveApi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BillFulfilmentArchiveAPIClient is the client API for BillFulfilmentArchiveAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BillFulfilmentArchiveAPIClient interface {
	GetBillFulfilmentArchive(ctx context.Context, in *GetBillFulfilmentArchiveRequest, opts ...grpc.CallOption) (*GetBillFulfilmentArchiveResponse, error)
	GetBillFulfilmentArchiveByRequestID(ctx context.Context, in *GetBillFulfilmentArchiveByRequestIDRequest, opts ...grpc.CallOption) (*GetBillFulfilmentArchiveResponse, error)
	SaveBillFulfilmentArchive(ctx context.Context, in *SaveBillFulfilmentArchiveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetBillFulfilmentArchiveByAccountNumber(ctx context.Context, in *GetBillFulfilmentArchiveByAccountNumberRequest, opts ...grpc.CallOption) (*GetBillFulfilmentArchiveResponse, error)
}

type billFulfilmentArchiveAPIClient struct {
	cc *grpc.ClientConn
}

func NewBillFulfilmentArchiveAPIClient(cc *grpc.ClientConn) BillFulfilmentArchiveAPIClient {
	return &billFulfilmentArchiveAPIClient{cc}
}

func (c *billFulfilmentArchiveAPIClient) GetBillFulfilmentArchive(ctx context.Context, in *GetBillFulfilmentArchiveRequest, opts ...grpc.CallOption) (*GetBillFulfilmentArchiveResponse, error) {
	out := new(GetBillFulfilmentArchiveResponse)
	err := c.cc.Invoke(ctx, "/BillFulfilmentArchiveAPI/GetBillFulfilmentArchive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billFulfilmentArchiveAPIClient) GetBillFulfilmentArchiveByRequestID(ctx context.Context, in *GetBillFulfilmentArchiveByRequestIDRequest, opts ...grpc.CallOption) (*GetBillFulfilmentArchiveResponse, error) {
	out := new(GetBillFulfilmentArchiveResponse)
	err := c.cc.Invoke(ctx, "/BillFulfilmentArchiveAPI/GetBillFulfilmentArchiveByRequestID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billFulfilmentArchiveAPIClient) SaveBillFulfilmentArchive(ctx context.Context, in *SaveBillFulfilmentArchiveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BillFulfilmentArchiveAPI/SaveBillFulfilmentArchive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billFulfilmentArchiveAPIClient) GetBillFulfilmentArchiveByAccountNumber(ctx context.Context, in *GetBillFulfilmentArchiveByAccountNumberRequest, opts ...grpc.CallOption) (*GetBillFulfilmentArchiveResponse, error) {
	out := new(GetBillFulfilmentArchiveResponse)
	err := c.cc.Invoke(ctx, "/BillFulfilmentArchiveAPI/GetBillFulfilmentArchiveByAccountNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillFulfilmentArchiveAPIServer is the server API for BillFulfilmentArchiveAPI service.
type BillFulfilmentArchiveAPIServer interface {
	GetBillFulfilmentArchive(context.Context, *GetBillFulfilmentArchiveRequest) (*GetBillFulfilmentArchiveResponse, error)
	GetBillFulfilmentArchiveByRequestID(context.Context, *GetBillFulfilmentArchiveByRequestIDRequest) (*GetBillFulfilmentArchiveResponse, error)
	SaveBillFulfilmentArchive(context.Context, *SaveBillFulfilmentArchiveRequest) (*empty.Empty, error)
	GetBillFulfilmentArchiveByAccountNumber(context.Context, *GetBillFulfilmentArchiveByAccountNumberRequest) (*GetBillFulfilmentArchiveResponse, error)
}

// UnimplementedBillFulfilmentArchiveAPIServer can be embedded to have forward compatible implementations.
type UnimplementedBillFulfilmentArchiveAPIServer struct {
}

func (*UnimplementedBillFulfilmentArchiveAPIServer) GetBillFulfilmentArchive(ctx context.Context, req *GetBillFulfilmentArchiveRequest) (*GetBillFulfilmentArchiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBillFulfilmentArchive not implemented")
}
func (*UnimplementedBillFulfilmentArchiveAPIServer) GetBillFulfilmentArchiveByRequestID(ctx context.Context, req *GetBillFulfilmentArchiveByRequestIDRequest) (*GetBillFulfilmentArchiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBillFulfilmentArchiveByRequestID not implemented")
}
func (*UnimplementedBillFulfilmentArchiveAPIServer) SaveBillFulfilmentArchive(ctx context.Context, req *SaveBillFulfilmentArchiveRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBillFulfilmentArchive not implemented")
}
func (*UnimplementedBillFulfilmentArchiveAPIServer) GetBillFulfilmentArchiveByAccountNumber(ctx context.Context, req *GetBillFulfilmentArchiveByAccountNumberRequest) (*GetBillFulfilmentArchiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBillFulfilmentArchiveByAccountNumber not implemented")
}

func RegisterBillFulfilmentArchiveAPIServer(s *grpc.Server, srv BillFulfilmentArchiveAPIServer) {
	s.RegisterService(&_BillFulfilmentArchiveAPI_serviceDesc, srv)
}

func _BillFulfilmentArchiveAPI_GetBillFulfilmentArchive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillFulfilmentArchiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillFulfilmentArchiveAPIServer).GetBillFulfilmentArchive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BillFulfilmentArchiveAPI/GetBillFulfilmentArchive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillFulfilmentArchiveAPIServer).GetBillFulfilmentArchive(ctx, req.(*GetBillFulfilmentArchiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillFulfilmentArchiveAPI_GetBillFulfilmentArchiveByRequestID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillFulfilmentArchiveByRequestIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillFulfilmentArchiveAPIServer).GetBillFulfilmentArchiveByRequestID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BillFulfilmentArchiveAPI/GetBillFulfilmentArchiveByRequestID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillFulfilmentArchiveAPIServer).GetBillFulfilmentArchiveByRequestID(ctx, req.(*GetBillFulfilmentArchiveByRequestIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillFulfilmentArchiveAPI_SaveBillFulfilmentArchive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBillFulfilmentArchiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillFulfilmentArchiveAPIServer).SaveBillFulfilmentArchive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BillFulfilmentArchiveAPI/SaveBillFulfilmentArchive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillFulfilmentArchiveAPIServer).SaveBillFulfilmentArchive(ctx, req.(*SaveBillFulfilmentArchiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillFulfilmentArchiveAPI_GetBillFulfilmentArchiveByAccountNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillFulfilmentArchiveByAccountNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillFulfilmentArchiveAPIServer).GetBillFulfilmentArchiveByAccountNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BillFulfilmentArchiveAPI/GetBillFulfilmentArchiveByAccountNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillFulfilmentArchiveAPIServer).GetBillFulfilmentArchiveByAccountNumber(ctx, req.(*GetBillFulfilmentArchiveByAccountNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BillFulfilmentArchiveAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BillFulfilmentArchiveAPI",
	HandlerType: (*BillFulfilmentArchiveAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBillFulfilmentArchive",
			Handler:    _BillFulfilmentArchiveAPI_GetBillFulfilmentArchive_Handler,
		},
		{
			MethodName: "GetBillFulfilmentArchiveByRequestID",
			Handler:    _BillFulfilmentArchiveAPI_GetBillFulfilmentArchiveByRequestID_Handler,
		},
		{
			MethodName: "SaveBillFulfilmentArchive",
			Handler:    _BillFulfilmentArchiveAPI_SaveBillFulfilmentArchive_Handler,
		},
		{
			MethodName: "GetBillFulfilmentArchiveByAccountNumber",
			Handler:    _BillFulfilmentArchiveAPI_GetBillFulfilmentArchiveByAccountNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bill_fulfilment_archive_api.proto",
}

func (m *BillFulfilmentArchive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BillFulfilmentArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BillFulfilmentArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBillFulfilmentArchiveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBillFulfilmentArchiveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBillFulfilmentArchiveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tag != 0 {
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(m.Tag))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBillFulfilmentArchiveByRequestIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBillFulfilmentArchiveByRequestIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBillFulfilmentArchiveByRequestIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SaveBillFulfilmentArchiveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveBillFulfilmentArchiveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveBillFulfilmentArchiveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Archive != nil {
		{
			size, err := m.Archive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LegacyLookup {
		i--
		if m.LegacyLookup {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Tag != 0 {
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(m.Tag))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Month) > 0 {
		i -= len(m.Month)
		copy(dAtA[i:], m.Month)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.Month)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Year) > 0 {
		i -= len(m.Year)
		copy(dAtA[i:], m.Year)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.Year)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBillFulfilmentArchiveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBillFulfilmentArchiveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBillFulfilmentArchiveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Archive != nil {
		{
			size, err := m.Archive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBillFulfilmentArchiveApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBillFulfilmentArchiveApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovBillFulfilmentArchiveApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BillFulfilmentArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	return n
}

func (m *GetBillFulfilmentArchiveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	if m.Tag != 0 {
		n += 1 + sovBillFulfilmentArchiveApi(uint64(m.Tag))
	}
	return n
}

func (m *GetBillFulfilmentArchiveByRequestIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	return n
}

func (m *SaveBillFulfilmentArchiveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	if m.Archive != nil {
		l = m.Archive.Size()
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	return n
}

func (m *GetBillFulfilmentArchiveByAccountNumberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	l = len(m.Year)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	l = len(m.Month)
	if l > 0 {
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	if m.Tag != 0 {
		n += 1 + sovBillFulfilmentArchiveApi(uint64(m.Tag))
	}
	if m.LegacyLookup {
		n += 2
	}
	return n
}

func (m *GetBillFulfilmentArchiveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Archive != nil {
		l = m.Archive.Size()
		n += 1 + l + sovBillFulfilmentArchiveApi(uint64(l))
	}
	return n
}

func sovBillFulfilmentArchiveApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBillFulfilmentArchiveApi(x uint64) (n int) {
	return sovBillFulfilmentArchiveApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *BillFulfilmentArchive) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BillFulfilmentArchive{`,
		`Data:` + fmt.Sprintf("%v", this.Data) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetBillFulfilmentArchiveRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetBillFulfilmentArchiveRequest{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Tag:` + fmt.Sprintf("%v", this.Tag) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetBillFulfilmentArchiveByRequestIDRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetBillFulfilmentArchiveByRequestIDRequest{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SaveBillFulfilmentArchiveRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SaveBillFulfilmentArchiveRequest{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Archive:` + strings.Replace(this.Archive.String(), "BillFulfilmentArchive", "BillFulfilmentArchive", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetBillFulfilmentArchiveByAccountNumberRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetBillFulfilmentArchiveByAccountNumberRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`Year:` + fmt.Sprintf("%v", this.Year) + `,`,
		`Month:` + fmt.Sprintf("%v", this.Month) + `,`,
		`Tag:` + fmt.Sprintf("%v", this.Tag) + `,`,
		`LegacyLookup:` + fmt.Sprintf("%v", this.LegacyLookup) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetBillFulfilmentArchiveResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetBillFulfilmentArchiveResponse{`,
		`Archive:` + strings.Replace(this.Archive.String(), "BillFulfilmentArchive", "BillFulfilmentArchive", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringBillFulfilmentArchiveApi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *BillFulfilmentArchive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BillFulfilmentArchive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BillFulfilmentArchive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillFulfilmentArchiveApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBillFulfilmentArchiveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			m.Tag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tag |= fulfilment.Tag(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBillFulfilmentArchiveApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBillFulfilmentArchiveByRequestIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveByRequestIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveByRequestIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillFulfilmentArchiveApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SaveBillFulfilmentArchiveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveBillFulfilmentArchiveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveBillFulfilmentArchiveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Archive == nil {
				m.Archive = &BillFulfilmentArchive{}
			}
			if err := m.Archive.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillFulfilmentArchiveApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBillFulfilmentArchiveByAccountNumberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveByAccountNumberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveByAccountNumberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Year", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Year = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Month", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Month = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			m.Tag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tag |= RequestTag(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LegacyLookup", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LegacyLookup = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipBillFulfilmentArchiveApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBillFulfilmentArchiveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBillFulfilmentArchiveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Archive == nil {
				m.Archive = &BillFulfilmentArchive{}
			}
			if err := m.Archive.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillFulfilmentArchiveApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillFulfilmentArchiveApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBillFulfilmentArchiveApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBillFulfilmentArchiveApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBillFulfilmentArchiveApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBillFulfilmentArchiveApi
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthBillFulfilmentArchiveApi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBillFulfilmentArchiveApi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBillFulfilmentArchiveApi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthBillFulfilmentArchiveApi
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBillFulfilmentArchiveApi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBillFulfilmentArchiveApi   = fmt.Errorf("proto: integer overflow")
)
