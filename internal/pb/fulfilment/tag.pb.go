// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tag.proto

package fulfilment

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Tag int32

const (
	BILL_FULFILMENT_REQUEST_TAG_UNDEFINED                                Tag = 0
	BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_FULL_ITEMISATION             Tag = 1
	BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_SUMMARISED_ITEMISATION       Tag = 2
	BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_SUMMARISED_ITEMISATION_LARGE Tag = 3
	BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_CSV                          Tag = 4
	BILL_FULFILMENT_REQUEST_TAG_BUSINESS_FULL_ITEMISATION                Tag = 5
	BILL_FULFILMENT_REQUEST_TAG_BUSINESS_SUMMARISED_ITEMISATION          Tag = 6
	BILL_FULFILMENT_REQUEST_TAG_BUSINESS_SUMMARISED_ITEMISATION_LARGE    Tag = 7
	BILL_FULFILMENT_REQUEST_TAG_BUSINESS_CSV                             Tag = 8
	BILL_FULFILMENT_REQUEST_TAG_DRY_RUN                                  Tag = 9
)

var Tag_name = map[int32]string{
	0: "BILL_FULFILMENT_REQUEST_TAG_UNDEFINED",
	1: "BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_FULL_ITEMISATION",
	2: "BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_SUMMARISED_ITEMISATION",
	3: "BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_SUMMARISED_ITEMISATION_LARGE",
	4: "BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_CSV",
	5: "BILL_FULFILMENT_REQUEST_TAG_BUSINESS_FULL_ITEMISATION",
	6: "BILL_FULFILMENT_REQUEST_TAG_BUSINESS_SUMMARISED_ITEMISATION",
	7: "BILL_FULFILMENT_REQUEST_TAG_BUSINESS_SUMMARISED_ITEMISATION_LARGE",
	8: "BILL_FULFILMENT_REQUEST_TAG_BUSINESS_CSV",
	9: "BILL_FULFILMENT_REQUEST_TAG_DRY_RUN",
}

var Tag_value = map[string]int32{
	"BILL_FULFILMENT_REQUEST_TAG_UNDEFINED":                                0,
	"BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_FULL_ITEMISATION":             1,
	"BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_SUMMARISED_ITEMISATION":       2,
	"BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_SUMMARISED_ITEMISATION_LARGE": 3,
	"BILL_FULFILMENT_REQUEST_TAG_RESIDENTIAL_CSV":                          4,
	"BILL_FULFILMENT_REQUEST_TAG_BUSINESS_FULL_ITEMISATION":                5,
	"BILL_FULFILMENT_REQUEST_TAG_BUSINESS_SUMMARISED_ITEMISATION":          6,
	"BILL_FULFILMENT_REQUEST_TAG_BUSINESS_SUMMARISED_ITEMISATION_LARGE":    7,
	"BILL_FULFILMENT_REQUEST_TAG_BUSINESS_CSV":                             8,
	"BILL_FULFILMENT_REQUEST_TAG_DRY_RUN":                                  9,
}

func (Tag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_27f545bcde37ecb5, []int{0}
}

func init() {
	proto.RegisterEnum("fulfilment.Tag", Tag_name, Tag_value)
}

func init() { proto.RegisterFile("tag.proto", fileDescriptor_27f545bcde37ecb5) }

var fileDescriptor_27f545bcde37ecb5 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xbd, 0x4a, 0x03, 0x41,
	0x14, 0x46, 0x67, 0x4c, 0x8c, 0xe6, 0x56, 0xcb, 0x3c, 0xc0, 0x6d, 0x44, 0xfc, 0x45, 0x0b, 0x11,
	0x14, 0x45, 0xdd, 0x75, 0x6f, 0xe2, 0xc0, 0xee, 0x88, 0xf3, 0x23, 0x68, 0x33, 0x44, 0x30, 0x41,
	0x88, 0x46, 0x24, 0xf6, 0x3e, 0x82, 0x8f, 0xe1, 0x9b, 0x68, 0x99, 0x32, 0xa5, 0x99, 0x34, 0x96,
	0x79, 0x04, 0x31, 0x58, 0x28, 0x62, 0x58, 0x48, 0xff, 0x9d, 0x03, 0x07, 0x3e, 0xa8, 0x76, 0x1b,
	0xad, 0x8d, 0xfb, 0x87, 0x4e, 0xb7, 0x23, 0xa0, 0xf9, 0xd8, 0x6e, 0xde, 0xb4, 0x6f, 0xaf, 0xef,
	0xba, 0xab, 0xaf, 0x65, 0x28, 0xd9, 0x46, 0x4b, 0xac, 0xc0, 0x62, 0x22, 0xb3, 0xcc, 0xd7, 0x5c,
	0x56, 0x93, 0x59, 0x4e, 0xca, 0x7a, 0x4d, 0x67, 0x8e, 0x8c, 0xf5, 0x36, 0xae, 0x7b, 0xa7, 0x52,
	0xaa, 0x49, 0x45, 0x69, 0xc4, 0xc4, 0x3e, 0xec, 0x4c, 0x9a, 0x6a, 0x32, 0x32, 0x25, 0x65, 0x65,
	0x3c, 0x9e, 0x64, 0x5e, 0x5a, 0xca, 0xa5, 0x89, 0xad, 0x3c, 0x55, 0x11, 0x17, 0x09, 0x1c, 0x14,
	0xa5, 0x8d, 0xcb, 0xf3, 0x58, 0x4b, 0x43, 0xe9, 0x2f, 0xc7, 0x8c, 0x38, 0x81, 0x74, 0x3a, 0x87,
	0xcf, 0x62, 0x5d, 0xa7, 0xa8, 0x24, 0x36, 0x61, 0xad, 0xa8, 0xe9, 0xd8, 0x9c, 0x47, 0x65, 0xb1,
	0x0b, 0xdb, 0x93, 0x80, 0xc4, 0x19, 0xa9, 0xc8, 0x98, 0xbf, 0xe5, 0xb3, 0xe2, 0x10, 0xf6, 0x0a,
	0xa1, 0xff, 0x64, 0x57, 0x04, 0x41, 0x3c, 0x85, 0xe0, 0xbb, 0x79, 0x4e, 0xac, 0xc3, 0x72, 0x21,
	0xcd, 0x57, 0xf0, 0xbc, 0x58, 0x82, 0x85, 0x49, 0xeb, 0x54, 0x5f, 0x78, 0xed, 0x54, 0x54, 0x4d,
	0x8e, 0x7a, 0x03, 0x64, 0xfd, 0x01, 0xb2, 0xd1, 0x00, 0xf9, 0x53, 0x40, 0xfe, 0x12, 0x90, 0xbf,
	0x05, 0xe4, 0xbd, 0x80, 0xfc, 0x3d, 0x20, 0xff, 0x08, 0xc8, 0x46, 0x01, 0xf9, 0xf3, 0x10, 0x59,
	0x6f, 0x88, 0xac, 0x3f, 0x44, 0x76, 0xf9, 0xe3, 0x8b, 0x57, 0x95, 0xf1, 0x3d, 0xb7, 0x3e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x9c, 0xf1, 0x2a, 0xc8, 0xab, 0x02, 0x00, 0x00,
}

func (x Tag) String() string {
	s, ok := Tag_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
